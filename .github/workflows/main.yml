name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches_ignore: []

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup black linter
        run: conda create --quiet --name black black

      - name: Lint python code
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          source activate black
          black --check juliart

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup conda environment
        run: conda create --quiet --name juliart

      - name: Install juliart
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          source activate juliart
          python setup.py install
          pip install imageio

      - name: Test random generator
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          juliart generate
          juliart generate --iter 1000 --radius 8

      - name: Generate with rgb color
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          juliart generate --rgb 179,0,12

      - name: Generate with theme
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          juliart generate --theme halloween

      - name: Generate with color choice
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          juliart generate --color random
          juliart generate --color pattern
          juliart generate --color glow

      - name: Generate with custom coordinate or message
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          juliart generate --ca -0.5 --cb 0.5
          juliart generate --text "Dinosaurs are great!"

      - name: Generate with custom font
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          juliart generate --font-alpha 90 --font Pacifico-Regular

      - name: Generate animation
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          juliart animate

      - name: Test Docker Build
        run: |
            docker build -t quay.io/vanessa/juliart .
            DOCKER_TAG=$(docker run quay.io/vanessa/juliart:latest --version)
            echo "Docker tag for deploy will be: ${DOCKER_TAG}"
